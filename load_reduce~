#! /bin/bash
#Lab 1
#
#Exercise 3
#
#Objectives:
#  1. Learn how t mnitor a process using ps
#  2. Learn to write script programs usig ps for CPU utilisation management
#
#Author: Ian Lodovica
#Date: 10/2/2016
#rm names uniq_list;

#mkfifo names uniq_list;

proc_count=$(ps aux | tail -n +2 | wc -l);
busy_process=$(ps aux | sort -k 3 -r | head -2 | tail -1 | awk '{print$1, $11}');
proc_cpu_max=$(ps aux | sort -k 3 -r | head -2 | tail -1 | awk '{print$3}');
proc_cpu_id=$(ps aux | sort -k 3 -r | head -2 | tail -1 | awk '{print$2}');
round_cpu=$(echo $proc_cpu_max | sed 's/\..$//');

ps aux | awk '$1! = "USER" {print$1} '>names

sort names | uniq > uniq_list

echo -e "\nProcs \tUsers"

while read xuser
do
    x=$(grep "$xuser" names | wc -l)
    echo -e "$x \t $xuser"
done < uniq_list


echo;

echo Process Count: $proc_count;
echo Busiest Process: $busy_process

if(( round_cpu >= 60)); then
    kill proc_cpu_id;
    echo $busy_process | awk '{print$2}'; 
fi

exit 0
