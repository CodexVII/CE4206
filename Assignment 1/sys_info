#! /bin/bash
#Lab 1
#
#Exercise 2
#sys_info
#
#Objectives
#   1. Learn how to access information from system variables
#   2. Learn how to access system information from the proc file system
#
#Author: Ian Lodovica
#Date: 10/02/2016

cpuinfo_path=~/../../proc/cpuinfo;
meminfo_path=~/../../proc/meminfo;

hostname=$(hostname);
machine_type=$(arch ; uname);
partition_count=$(df | grep "^/dev" | wc -l);
free_space=$(df -h ~ | awk '{print $4}' | tail -1);
percentage_used=$(df -h ~ | awk '{print $5}' | tail -1);
model_name=$(grep "^model name" $cpuinfo_path | head -1 | cut -f3-5 -d ''); #- specified to '' or ' ' returns the same string
cpu_clock=$(grep "^model name" $cpuinfo_path | head -1 | awk '{print $9}');
cache_size=$(grep "^cache size" $cpuinfo_path | head -1 | awk '{print $4 $5}');

mem_size=$(grep "^MemTotal" $meminfo_path | cut -f3-4 -d ''); #if -d specified to ' ' returns nothing. odd.
mem_free=$(grep "^MemFree" $meminfo_path | cut -f3-4 -d '');

echo User: $USER, User ID: $UID, Hostname: $hostname, Machine Type: $machine_type;
echo Partitions: $partition_count, Disk Space: $free_space, Percentage Used: $percentage_used;
echo CPU model: $model_name, CPU speed: $cpu_clock, CPU cache size: $cache_size;
echo Total memory size: $memory_size, Free memory: $mem_free;

exit 0
